<script>
	function getRealId(id) {
		var splitted = id.split("_");
		return splitted.last();
	};
	
	function containsById(collection, id){
		var return_value = false;
		collection.each(function(element){
				if(element.id == id){
					return_value = true;
				}
		});
		return return_value;
	}

	function renderIssueList(parent_div, issues, trackers) {
		console.log(trackers);
		parent_div.update("");
	
		var trackers_div = new Element("div", {
			"class" : "scrumbler_backlog_trackers"
		});
		console.log(trackers);
		trackers.each(function(tracker){
			var tracker_div = new Element("div", {
				"id" : tracker.id,
				"class" : "scrumbler_backlog_tracker",
				"style" : "background:#"+tracker.color+";"
			});
			tracker_div.update(tracker.name);
			trackers_div.appendChild(tracker_div);
		});
		
		parent_div.appendChild(trackers_div);

		var issues_div = new Element("div", {
			"class" : "scrumbler_backlog_issues"
		});

		issues.each(function(issue) {
			
			console.log("disabled", issue.disabled);
			var issue_div = new Element("div", {
				"id" : "issue_" + issue.id,
				"class" : issue.disabled ? "disabled_issue" : "issue"
			});
			issue_div.update("<p>" + issue.subject + "</p>");
			new Draggable(issue_div, {
				revert : true
			});
			issues_div.appendChild(issue_div);
		});
		
		
		parent_div.appendChild(issues_div);
	};

	var IssuesList = Class.create({

		initialize : function(config) {
			console.log(config);
			this.issues = config.issues;
			this.trackers = config.trackers;
			this.parent = $(config.parent_id);
			this.sprint_id = config.sprint_id;
			this.url = config.url;
			renderIssueList(this.parent, config.issues, config.trackers);
			Droppables.add(this.parent, {
				accept : 'issue',
				onDrop : this.onDrop.bind(this)
			});
		},
		onDrop : function(issue_div, target_div, event) {
			var issue_id = getRealId(issue_div.id);
			var source_div = issue_div.parentNode.parentNode
			if(source_div == target_div) {
				return;
			}

			issue_div.hide();
			new Ajax.Request(this.url, {
				method : 'post',
				parameters : {
					'issue_id' : issue_id,
					'sprint_id' : this.sprint_id,
				},
				onSuccess : function(transport) { target_div
					var resp = transport.responseJSON;
					console.log(resp);
					if(resp.success) {
						// Move issue to backlog
						if(this.sprint_id === undefined) {
							renderIssueList(target_div, resp.backlog.issues, resp.backlog.trackers);
							renderIssueList(source_div, resp.sprint.issues, resp.sprint.trackers);
						}
						// Move issue to sprint
						else {
							renderIssueList(source_div, resp.backlog.issues, resp.backlog.trackers);
							renderIssueList(target_div, resp.sprint.issues, resp.sprint.trackers);
						}
					} else {
						$growler.growl(resp.text, {
							header : 'Ошибка'
						});
					}

				}.bind(this),
				onFailure : function() {
					$growler.growl('Something went wrong...', {
						header : 'Error'
					});
				},
				onComplete : function() {
					issue_div.show();
				}
			});
		}
	});
	
var BacklogIssuesList = Class.create(IssuesList, {
	setAvaliavbleTrackers: function(trackers){
		this.issues.each(function(issue){
			var d = containsById(trackers, issue.tracker_id);
				issue.disabled = !d;
		});
		renderIssueList(this.parent, this.issues, this.trackers);
	}
});
var SprintIssuesList = Class.create(IssuesList, {
	
});

</script>
<% content_for :header_tags do %>
<%= stylesheet_link_tag    'scrumbler', :plugin => 'redmine_scrumbler' %>
<%= javascript_include_tag 'Growler-packed', :plugin => 'redmine_scrumbler' %>
<%= javascript_include_tag 'growler', :plugin => 'redmine_scrumbler' %>
<%end%>
<div id="splitcontentleft" style="float:left;width:48%;">
	<div class ="box" >
		<div id="backlog" class="backlog">
			<h2><%= l(:label_backlog)%></h2>
			<div id="backlog_list" style="min-height:100px;"></div>
		</div>
		<%= backlog_issues%>
	</div>
</div>
<div id="splitcontentright" style="float:right; width:50%;">
	<div class ="box">
		<h2><%= l(:label_sprints)%></h2>
		<%= render_sprint_tabs scrumbler_sprints_tabs(@project.scrumbler_sprints.planning)%>
	</div>
</div>